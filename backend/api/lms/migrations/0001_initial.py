# Generated by Django 5.0.7 on 2024-08-21 15:00

import django.db.models.deletion
import lms.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('authApi', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Assessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('description', models.TextField()),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='AssessmentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='CourseCategorie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('categorieName', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='AssessementSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.FloatField()),
                ('submittedAt', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='my_submissions', to='authApi.user')),
                ('assessement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sumissions', to='lms.assessment')),
            ],
        ),
        migrations.AddField(
            model_name='assessment',
            name='assessementType',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assessements', to='lms.assessmenttype'),
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('desc', models.TextField(max_length=300)),
                ('rating', models.FloatField(default=1.0)),
                ('instructor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courses', to='authApi.instructor')),
                ('categories', models.ManyToManyField(related_name='courses', to='lms.coursecategorie')),
            ],
        ),
        migrations.AddField(
            model_name='assessment',
            name='course',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_assessements', to='lms.course'),
        ),
        migrations.CreateModel(
            name='Discussion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='discussions', to='lms.course')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='my_discussions', to='authApi.user')),
            ],
        ),
        migrations.CreateModel(
            name='DiscussionComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('createdAt', models.DateField(auto_now=True)),
                ('content', models.TextField()),
                ('discussion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='lms.discussion')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='my_comments', to='authApi.user')),
            ],
        ),
        migrations.CreateModel(
            name='Enrollement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('startedAt', models.DateField(auto_now=True)),
                ('progress', models.IntegerField()),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrolled_students', to='lms.course')),
                ('employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='enrolled_employees', to='authApi.employee')),
                ('student', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='myEnrollements', to='authApi.student')),
            ],
        ),
        migrations.CreateModel(
            name='JobPosting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('description', models.TextField()),
                ('companyName', models.CharField(max_length=255)),
                ('region', models.CharField(max_length=255)),
                ('employementType', models.CharField(max_length=255)),
                ('salaryRange', models.FloatField()),
                ('date_posed', models.DateField(auto_now_add=True)),
                ('contract', models.CharField(choices=[(lms.models.ContractTypes['PARTTIME'], 'part time'), (lms.models.ContractTypes['FULLTIME'], 'full time'), (lms.models.ContractTypes['FREELANCECONTRACT'], 'Freelance Contract'), (lms.models.ContractTypes['FIXEDTERM'], 'Fixed-term')], max_length=50)),
                ('industry', models.CharField(choices=[('IT', 'IT'), ('FIN', 'FIN'), ('HEALTH', 'HEALTH'), ('EDU', 'EDU'), ('MINING', 'MINING'), ('TECHNOLOGY', 'TECHNOLOGY'), ('AGRICULTURE', 'AGRICULTURE'), ('HOSPITALITY INDUSTRY', 'HOSPITALITY INDUSTRY'), ('FOOD INDUSTRY', 'FOOD INDUSTRY'), ('TRANSPORTATION', 'TRANSPORTATION'), ('FASHION', 'FASHION'), ('TELECOMMUNICATION', 'TELECOMMUNICATION'), ('Professional, Scientific and Technical Services', 'Professional, Scientific and Technical Services'), ('Wholesale Trade', 'Wholesale Trade'), ('Manufacturing', 'Manufacturing'), ('BUSINESS', 'BUSINESS'), ('Infrastructure and Contractors', 'Infrastructure and Contractors')], max_length=100)),
                ('languages', models.ManyToManyField(related_name='related_jobs', to='authApi.language')),
                ('preferredSkills', models.ManyToManyField(related_name='job_preferred_skills', to='authApi.skill')),
                ('requiredSkills', models.ManyToManyField(related_name='job_required_skills', to='authApi.skill')),
            ],
        ),
        migrations.CreateModel(
            name='JobApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'PENDING'), ('hired', 'HIRED'), ('rejected', 'REJECTED')], max_length=55)),
                ('motif', models.TextField()),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='my_job_applications', to='authApi.employee')),
                ('job_posting', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_applications', to='lms.jobposting')),
            ],
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField()),
                ('quiztype', models.CharField(choices=[(lms.models.quizType['MULTIPLECHOICES'], 'multiple choices'), (lms.models.quizType['QA'], 'qa')], max_length=20)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quizzes', to='lms.course')),
            ],
        ),
        migrations.CreateModel(
            name='QA',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.TextField()),
                ('explanation', models.TextField()),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='qa_question', to='lms.quiz')),
            ],
        ),
        migrations.CreateModel(
            name='QuizChoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=255)),
                ('isCorrect', models.BooleanField(default=False)),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quiz', to='lms.quiz')),
            ],
        ),
        migrations.CreateModel(
            name='Recommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('degree', models.IntegerField()),
                ('recommendationType', models.CharField(choices=[('course', 'COURSE'), ('job', 'JOB')], default='course', max_length=100)),
                ('employee', models.ManyToManyField(null=True, related_name='my_recommendations', to='authApi.employee')),
                ('student', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='my_recommendations', to='authApi.student')),
            ],
        ),
        migrations.CreateModel(
            name='CourseRecommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recommended_to', to='lms.course')),
                ('recommendation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_recommendation', to='lms.recommendation')),
            ],
        ),
        migrations.CreateModel(
            name='CareerRecommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('relevanceScore', models.FloatField()),
                ('jobPosting', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recommended_to', to='lms.jobposting')),
                ('recommendation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='career_recommendation', to='lms.recommendation')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('rating', models.IntegerField()),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_reviews', to='lms.course')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='MyReviews', to='authApi.user')),
            ],
        ),
        migrations.CreateModel(
            name='SkillMatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('match_percentage', models.FloatField()),
                ('job_posting', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='skill_matches', to='lms.jobposting')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='skill_matches', to='authApi.user')),
            ],
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('createdAt', models.DateTimeField(auto_now=True)),
                ('amount', models.IntegerField()),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course', to='lms.course')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employee', to='authApi.employee')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student', to='authApi.student')),
            ],
        ),
        migrations.CreateModel(
            name='UserProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('progress_percentage', models.FloatField()),
                ('last_accessed', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_progress', to='lms.course')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progress', to='authApi.user')),
            ],
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField()),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='videos', to='lms.course')),
            ],
        ),
    ]
